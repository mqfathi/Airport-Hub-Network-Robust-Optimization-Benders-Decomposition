set i/1*25/
alias (i,j,k,l)
set ch(k)/3,4,10,12,17,23,25/
set oh(k)/1,2,5,6,7,8,9,11,13,14,15,16,18,19,20,21,22,24/
set b(oh)/2,5,8,11,21,15,20/
set t/1*20/;
alias (t,tt);

table NW(i,j)  amount of flow for the 1st period
         1           2           3           4            5           6           7           8           9           10          11          12           13          14          15          16          17           18          19          20          21          22           23          24          25
1        0           6469        7629        20036        4690        6194        11688       2243        8857        7248        3559        9221         10099       22866       3388        9986        46618        11639       1380        5261        5985        6731         2704        12250       16132
2        6469        0           12999       13692        3322        5576        3878        3202        6699        4198        2454        7975         1186        7443        1162        5105        24817        6532        806         8184        3896        7333         3719        2015        565
3        7629        12999       0           35135        5956        14121       5951        5768        16578       4242        3365        22254        1841        23665       6517        3541        205088       37669       2885        13200       7116        17165        4284        8085        51895
4        20036       13692       35135       0            19094       35119       21423       27342       51341       15826       28537       65387        12980       44097       51525       14354       172895       37305       15418       26221       42303       35303        13618       17580       40708
5        4690        3322        5956        19094        0           7284        3102        1562        7180        1917        2253        5951         1890        7097        2009        1340        25303        6031        1041        4128        5452        3344         1067        4608        7050
6        6194        5576        14121       35119        7284        0           5023        3512        10419       3543        2752        14412        2043        15642       5014        2016        62034        15385       2957        5035        7482        6758         2191        6599        14181
7        11688       3878        5951        21423        3102        5023        0           11557       6479        34261       10134       27350        6929        7961        4678        13511       29801        7549        5550        3089        9958        14110        4911        2722        10802
8        2243        3202        5768        27342        1562        3512        11557       0           5615        7095        10753       30362        1783        3437        8897        2509        23273        5160        8750        2583        7288        17481        7930        1278        8447
9        8857        6699        16578       51341        7180        10419       6479        5615        0           4448        5076        22463        4783        24609       9969        4224        79945        20001       4291        10604       11925       13091        4172        12891       19500
10       7248        4198        4242        15826        1917        3543        34261       7095        4448        0           4370        17267        3929        8602        2753        20013       28080        5971        2131        3579        6809        8455         2868        2336        5616
11       3559        2454        3365        28537        2253        2752        10134       10753       5076        4370        0           15287        3083        4092        7701        2809        17291        4462        3239        2309        16003       8381         3033        1755        7266
12       9221        7975        22254       65387        5951        14412       27350       30362       22463       17267       15287       0            5454        15011       17714       10037       105507       20040       31780       10822       16450       92083        32908       3865        24583
13       10099       1186        1841        12980        1890        2043        6929        1783        4783        3929        3083        5454         0           3251        1126        5926        10653        3062        759         1255        6173        2974         1056        1504        4588
14       22866       7443        23665       44097        7097        15642       7961        3437        24609       8602        4092        15011        3251        0           5550        9473        169397       25073       1170        14272       8543        8064         1840        20618       20937
15       3388        1162        6517        51525        2009        5014        4678        8897        9969        2753        7701        17714        1126        5550        0           2152        26816        6931        4947        2676        8033        12692        6157        3065        12044
16       9986        5105        3541        14354        1340        2016        13511       2509        4224        20013       2809        10037        5926        9473        2152        0           21806        4519        886         1742        4782        6453         2022        3546        5065
17       46618       24817       205088      172895       25303       62034       29801       23273       79945       28080       17291       105507       10653       169397      26816       21806       0            9040        11139       63153       34092       70935        14957       28398       166694
18       11639       6532        37669       37305        6031        15385       7549        5160        20001       5971        4462        20040        3062        25073       6931        4519        9040         0           2802        30224       7982        14964        4589        6227        12359
19       1380        806         2885        15418        1041        2957        5550        8750        4291        2131        3239        31780        759         1170        4947        886         11139        2802        0           1869        3716        11510        3519        569         3520
20       5261        8184        13200       26221        4128        5035        3089        2583        10604       3579        2309        10822        1255        14272       2676        1742        63153        30224       1869        0           5020        6610         2139        5431        13541
21       5985        3896        7116        42303        5452        7482        9958        7288        11925       6809        16003       16450        6173        8543        8033        4782        34092        7982        3716        5020        0           9942         3276        3820        11799
22       6731        7333        17165       35303        3344        6758        14110       17481       13091       8455        8381        92083        2974        8064        12692       6453        70935        14964       11510       6610        9942        0            35285       2566        19926
23       2704        3719        4284        13618        1067        2191        4911        7930        4172        2868        3033        32908        1056        1840        6157        2022        14957        4589        3519        2139        3276        35285        0           940         4951
24       12250       2015        8085        17580        4608        6599        2722        1278        12891       2336        1755        3865         1504        20618       3065        3546        28398        6227        569         5431        3820        2566         940         0           6237
25       16132       565         51895       40708        7050        14181       10802       8447        19500       5616        7266        24583        4588        20937       12044       5065        166694       12359       3520        13541       11799       19926        4951        6237        0
;

parameter W(t,i,j) ;
w('1',i,j)=NW(i,j);
parameters kai(t,i)
loop(t$(ord(t) gt 1),
if(uniform(0,1)>0.5,kai(t,i)=1;
else kai(t,i)=0;);
W(t,i,j)=W('1',i,j)*((kai(t,i)*(1+uniform(0,1)))+((1-kai(t,i))*(1-uniform(0,1))))
);

parameters O(t,i);
O(t,i)=sum(j,W(t,i,j));

parameter NQ(k);
NQ(k)$(ord(k) ne 25)=0.2*sum(i,O('1',i))+uniform(0,1)*O('1',k);
NQ('25')=sum(i,O('1',i));

parameter NDFHC(k)
/1       111185120.69
2        58310938.20
3        191221653.31
4        462468244.52
5        65158477.27
6        117925680.93
7        155582432.89
8        117762953.23
9        174981850.59
10        108693261.19
11        112824114.43
12        240063182.72
13        52505585.53
14        173421283.37
15        134300729.32
16        75507310.93
17        562426527.20
18        120921631.85
19        55071933.08
20        107822569.66
21        142773038.42
22        159856358.77
23        60215937.40
24        62846082.57
25        200967876.40
/

parameter FHC(t,k);
FHC('1',k)=NDFHC(k);
loop(t$(ord(t) gt 1),
FHC(t,k)=FHC(t-1,k)*(1+((5+uniform(0,5))/100))
);


parameter HMC(t,k);
HMC('1',k)=(7/12)*FHC('1',k);
loop(t$(ord(t) gt 1),
HMC(t,k)=HMC(t-1,k)*(1+((10+uniform(0,10))/100))
);


parameter HCC(t,k);
HCC('1',k)=(5/12)*FHC('1',k);
loop(t$(ord(t) gt 1),
HCC(t,k)=HCC(t-1,k)*(1+((5+uniform(0,5))/100))
);


table NC(i,j)       cost of transporting each unit of flow for the 1st period
         1                2               3               4               5               6               7               8               9               10              11              12              13              14              15              16              17              18              19              20             21               22              23              24              25
1        0                576.9631        946.4954        597.5972        373.8127        559.7673        709.0215        1208.328        603.6477        695.208         680.709         1936.572        332.4644        592.5679        908.7715        426.1877        756.1987        672.5906        1590.224        527.3008        483.4673        2140.978        2184.402        408.1648        540.7388
2        576.9631         0               369.5327        613.0386        429.1079        312.8831        1196.489        1502.14         405.8975        1241.961        960.3459        2318.076        786.5959        949.5669        938.7461        999.5005        179.2426        96.2744         1999.584        210.7656        736.3755        2456.263        2339.509        844.1663        36.4947
3        946.4954         369.5327        0               858.3308        749.6018        556.0706        1541.273        1764.791        621.3306        1603.165        1250.962        2600.078        1137.335        1266.851        1124.778        1368.267        190.3157        274.3105        2299.429        494.2224        1043.484        2703.402        2503.828        1188.549        405.7886
4        597.5972         613.0386        858.3308        0               255.0303        311.3071        790.1213        907.4331        237.0703        932.2173        406.3386        1741.873        485.5564        1186.858        345.8738        830.3635        720.4687        675.3437        1447.104        403.8657        255.8823        1853.617        1733.132        1005.761        592.0278
5        373.8127         429.1079        749.6018        255.0303        0               225.8954        794.1726        1080.374        238.944         879.5647        533.156         1889.528        402.3291        947.3188        598.541         700.4368        578.3286        512.3965        1570.725        255.6551        307.3289        2036.128        1967.256        775.239         399.2253
6        559.7673         312.8831        556.0706        311.3071        225.8954        0               1009.689        1216.868        94.2588         1104.574        694.9153        2047.122        627.115         1084.5          626.1548        922.3181        409.3542        365.6853        1743.432        104.6478        491.1125        2164.855        2027.319        933.196         298.8486
7        709.0215         1196.489        1541.273        790.1213        794.1726        1009.689        0               663.8762        982.7378        221.422         447.8044        1249.763        411.1133        1097.608        851.8228        423.7053        1362.874        1288.966        895.0908        1049.266        537.6206        1493.843        1686.675        912.2104        1161.676
8        1208.328         1502.14         1764.791        907.4331        1080.374        1216.868        663.8762        0               1143.791        874.5181        551.6299        841.624         880.0728        1714.651        694.0088        1066.563        1625.87         1574.822        593.4216        1301.511        780.9512        955.802         1024.566        1519.174        1475.479
9        603.6477         405.8975        621.3306        237.0703        238.944         94.2588         982.7378        1143.791        0               1094.906        636.9045        1978.943        620.488         1151.868        535.0244        936.2502        489.5645        453.2583        1682.489        198.9058        450.2585        2086.845        1936.304        992.3379        392.9045
10        695.208         1241.961        1603.165        932.2173        879.5647        1104.574        221.422         874.5181        1094.906        0               642.2092        1375.635        477.459         963.7202        1046.119        305.3132        1417.072        1337.648        1017.332        1125.041        677.0608        1649.619        1891.166        795.2136        1205.747
11        680.709         960.3459        1250.962        406.3386        533.156         694.9153        447.8044        551.6299        636.9045        642.2092        0               1358.213        378.5906        1236.192        405.0906        674.479         1096.712        1038.645        1048.539        768.1641        229.4867        1506.451        1503.794        1038.624        931.7148
12        1936.572        2318.076        2600.078        1741.873        1889.528        2047.122        1249.763        841.624         1978.943        1375.635        1358.213        0               1608.082        2335.816        1530.57         1661.778        2453.352        2396.794        358.3762        2125.512        1582.369        361.5388        986.8149        2157.517        2288.748
13        332.4644        786.5959        1137.335        485.5564        402.3291        627.115         411.1133        880.0728        620.488         477.459         378.5906        1608.082        0               858.251         700.8213        348.2725        955.6191        879.9795        1265.573        651.1179        254.9977        1808.52         1872.696        660.5173        751.4614
14        592.5679        949.5669        1266.851        1186.858        947.3188        1084.5          1097.608        1714.651        1151.868        963.7202        1236.192        2335.816        858.251         0               1500.774        675.7505        1098.282        1021.611        1977.613        1015.165        1065.599        2591.447        2725.79         197.8015        923.2229
15        908.7715        938.7461        1124.778        345.8738        598.541         626.1548        851.8228        694.0088        535.0244        1046.119        405.0906        1530.57         700.8213        1500.774        0               1039.77         1018.399        987.8645        1280.737        728.3743        450.3982        1589.835        1401.321        1311.21         922.3145
16        426.1877        999.5005        1368.267        830.3635        700.4368        922.3181        423.7053        1066.563        936.2502        305.3132        674.479         1661.778        348.2725        675.7505        1039.77         0               1178.439        1095.657        1304.043        918.5615        601.9917        1916.578        2090.089        496.4224        963.0435
17        756.1987        179.2426        190.3157        720.4687        578.3286        409.3542        1362.874        1625.87         489.5645        1417.072        1096.712        2453.352        955.6191        1098.282        1018.399        1178.439        0               84.3365         2143.565        328.7515        880.5469        2574.082        2415.489        1008.2          215.561
18        672.5906        96.2744         274.3105        675.3437        512.3965        365.6853        1288.966        1574.822        453.2583        1337.648        1038.645        2396.794        879.9795        1021.611        987.8645        1095.657        84.3365         0               2082.316        273.4106        818.1228        2526.562        2388.689        926.6267        132.7684
19        1590.224        1999.584        2299.429        1447.104        1570.725        1743.432        895.0908        593.4216        1682.489        1017.332        1048.539        358.3762        1265.573        1977.613        1280.737        1304.043        2143.565        2082.316        0               1814.83         1264.193        661.6543        1129.327        1800.098        1968.689
20        527.3008        210.7656        494.2224        403.8657        255.6551        104.6478        1049.266        1301.511        198.9058        1125.041        768.1641        2125.512        651.1179        1015.165        728.3743        918.5615        328.7515        273.4106        1814.83         0               552.4229        2253.211        2128.828        875.2542        194.5945
21        483.4673        736.3755        1043.484        255.8823        307.3289        491.1125        537.6206        780.9512        450.2585        677.0608        229.4867        1582.369        254.9977        1065.599        450.3982        601.9917        880.5469        818.1228        1264.193        552.4229        0               1735.937        1712.136        871.6396        706.5024
22        2140.978        2456.263        2703.402        1853.617        2036.128        2164.855        1493.843        955.802         2086.845        1649.619        1506.451        361.5388        1808.52         2591.447        1589.835        1916.578        2574.082        2526.562        661.6543        2253.211        1735.937        0               694.9363        2404.839        2430.269
23        2184.402        2339.509        2503.828        1733.132        1967.256        2027.319        1686.675        1024.566        1936.304        1891.166        1503.794        986.8149        1872.696        2725.79         1401.321        2090.089        2415.489        2388.689        1129.327        2128.828        1712.136        694.9363        0               2528.479        2321.873
24        408.1648        844.1663        1188.549        1005.761        775.239         933.196         912.2104        1519.174        992.3379        795.2136        1038.624        2157.517        660.5173        197.8015        1311.21        496.4224         1008.2          926.6267        1800.098        875.2542        871.6396        2404.839        2528.479        0               813.5513
25        540.7388        36.4947         405.7886        592.0278        399.2253        298.8486        1161.676        1475.479        392.9045        1205.747        931.7148        2288.748        751.4614        923.2229        922.3145        963.0435        215.561         132.7684        1968.689        194.5945        706.5024        2430.269        2321.873        813.5513        0
 ;
parameter C(t,i,j);
C('1',i,j)=NC(i,j);
loop(t$(ord(t) gt 1),
C(t,i,j)=C(t-1,i,j)*(1+((5+uniform(0,5))/100))
);

table DC1(t,k)
          1                  2                  3                  4                  5                  6                  7                  8                  9                  10                 11                 12                 13                 14                 15                 16                 17                 18                 19                 20                 21                 22                 23                 24                 25
1         332.4644           36.4947            190.3157           237.0703           225.8954           94.2588            221.422            551.6299           94.2588            221.422            229.4867           358.3762           254.9977           197.8015           345.8738           305.3132           84.3365            84.3365            358.3762           104.6478           229.4867           361.5388           694.9363           197.8015           36.4947
2         342.438332         37.589541          196.025171         244.182409         232.672262         97.086564          228.06466          568.178797         97.086564          228.06466          236.371301         369.127486         262.647631         203.735545         356.250014         314.472596         86.866595          86.866595          369.127486         107.787234         236.371301         372.384964         715.784389         203.735545         37.589541
3         352.711482         38.71722723        201.9059261        251.5078813        239.6524299        99.99916092        234.9065998        585.2241609        99.99916092        234.9065998        243.46244          380.2013106        270.5270599        209.8476114        366.9375144        323.9067739        89.47259285        89.47259285        380.2013106        111.020851         243.46244          383.5565129        737.2579207        209.8476114        38.71722723
4         363.2928264        39.87874405        207.9631039        259.0531177        246.8420028        102.9991357        241.9537978        602.7808857        102.9991357        241.9537978        250.7663132        391.6073499        278.6428717        216.1430397        377.9456399        333.6239771        92.15677064        92.15677064        391.6073499        114.3514766        250.7663132        395.0632083        759.3756583        216.1430397        39.87874405
5         374.1916112        41.07510637        214.201997         266.8247112        254.2472628        106.0891098        249.2124117        620.8643123        106.0891098        249.2124117        258.2893026        403.3555704        287.0021579        222.6273309        389.284009         343.6326964        94.92147375        94.92147375        403.3555704        117.7820208        258.2893026        406.9151046        782.156928         222.6273309        41.07510637
6         385.4173595        42.30735956        220.6280569        274.8294526        261.8746807        109.2717831        256.6887841        639.4902417        109.2717831        256.6887841        266.0379817        415.4562375        295.6122226        229.3061508        400.9625293        353.9416773        97.76911797        97.76911797        415.4562375        121.3154815        266.0379817        419.1225577        805.6216359        229.3061508        42.30735956
7         396.9798803        43.57658035        227.2468987        283.0743362        269.7309211        112.5499366        264.3894476        658.6749489        112.5499366        264.3894476        274.0191212        427.9199246        304.4805893        236.1853353        412.9914052        364.5599276        100.7021915        100.7021915        427.9199246        124.9549459        274.0191212        431.6962344        829.790285         236.1853353        43.57658035
8         408.8892767        44.88387776        234.0643056        291.5665662        277.8228488        115.9264347        272.321131         678.4351974        115.9264347        272.321131         282.2396948        440.7575224        313.615007         243.2708954        425.3811474        375.4967254        103.7232573        103.7232573        440.7575224        128.7035943        282.2396948        444.6471215        854.6839935        243.2708954        44.88387776
9         421.155955         46.23039409        241.0862348        300.3135632        286.1575342        119.4042277        280.490765         698.7882533        119.4042277        280.490765         290.7068856        453.980248        323.0234572         250.5690223        438.1425818        386.7616272        106.834955         106.834955         453.980248         132.5647021        290.7068856        457.9865351        880.3245133        250.5690223        46.23039409
10        433.7906337        47.61730591        248.3188218        309.3229701        294.7422603        122.9863546        288.9054879        719.7519009        122.9863546        288.9054879        299.4280922        467.5996555        332.7141609        258.0860929        451.2868592        398.364476         110.0400036        110.0400036        467.5996555        136.5416432        299.4280922        471.7261312        906.7342487        258.0860929        47.61730591
11        446.8043527        49.04582509        255.7683865        318.6026592        303.5845281        126.6759452        297.5726525        741.3444579        126.6759452        297.5726525        308.410935         481.6276451        342.6955857        265.8286757        464.825465         410.3154103        113.3412037        113.3412037        481.6276451        140.6378925        308.410935         485.8779151        933.9362762        265.8286757        49.04582509
12        460.2084833        50.51719984        263.4414381        328.160739         312.6920639        130.4762236        306.4998321        763.5847917        130.4762236        306.4998321        317.663263         496.0764745        352.9764533        273.803536         478.770229         422.6248726        116.7414398        116.7414398        496.0764745        144.8570293        317.663263         500.4542525        961.9543645        273.803536         50.51719984
13        474.0147378        52.03271584        271.3446812        338.0055612        322.0728258        134.3905103        315.6948271        786.4923354        134.3905103        315.6948271        327.1931609        510.9587687        363.5657469        282.0176421        493.1333358        435.3036188        120.243683         120.243683         510.9587687        149.2027401        327.1931609        515.4678801        990.8129954        282.0176421        52.03271584
14        488.2351799        53.59369731        279.4850216        348.145728         331.7350106        138.4222256        325.1656719        810.0871055        138.4222256        325.1656719        337.0089557        526.2875318        374.4727193        290.4781713        507.9273359        448.3627274        123.8509935        123.8509935        526.2875318        153.6788223        337.0089557        530.9319165        1020.537385        290.4781713        53.59369731
15        502.8822353        55.20150823        287.8695723        358.5900998        341.6870609        142.5748924        334.9206421        834.3897187        142.5748924        334.9206421        347.1192244        542.0761578        385.7069009        299.1925165        523.165156         461.8136092        127.5665233        127.5665233        542.0761578        158.289187         347.1192244        546.859874         1051.153507        299.1925165        55.20150823
16        517.9687024        56.85755348        296.5056595        369.3478028        351.9376728        146.8521391        344.9682613        859.4214102        146.8521391        344.9682613        357.5328011        558.3384425        397.2781079        308.168292         538.8601107        475.6680175        131.393519         131.393519         558.3384425        163.0378626        357.5328011        563.2656702        1082.688112        308.168292         56.85755348
17        533.5077635        58.56328008        305.4008293        380.4282369        362.4958029        151.2577033        355.3173092        885.2040525        151.2577033        355.3173092        368.2587852        575.0885958        409.1964511        317.4133407        555.025914         489.938058         135.3353246        135.3353246        575.0885958        167.9289985        368.2587852        580.1636403        1115.168755        317.4133407        58.56328008
18        549.5129964        60.32017849        314.5628541        391.841084         373.370677         155.7954344        365.9768284        911.7601741        155.7954344        365.9768284        379.3065487        592.3412536        421.4723447        326.9357409        571.6766914        504.6361997        139.3953843        139.3953843        592.3412536        172.9668685        379.3065487        597.5685496        1148.623818        326.9357409        60.32017849
19        565.9983862        62.12978384        323.9997398        403.5963166        384.5717973        160.4692974        376.9561333        939.1129793        160.4692974        376.9561333        390.6857452        610.1114912        434.116515         336.7438132        588.8269921        519.7752857        143.5772459        143.5772459        610.1114912        178.1558745        390.6857452        615.495606         1183.082533        336.7438132        62.12978384
20        582.9783378        63.99367736        333.7197319        415.7042061        396.1089513        165.2833764        388.2648173        967.2863687        165.2833764        388.2648173        402.4063176        628.414836        447.1400105         346.8461276        606.4918019        535.3685443        147.8845632        147.8845632        628.414836         183.5005507        402.4063176        633.9604742        1218.575009        346.8461276        63.99367736
;
parameter DC2(t,k);
DC2(t,k)=DC1(t,k)*1.5;
scalar r interest rate /1.03/
parameters BP(k);
BP(k)=0.1*NQ(k);
parameters CBC(t,k);
CBC('1',k)=NDFHC(k)/NQ(k);
CBC(t,k)$(ord(t) ge 2)=CBC(t-1,k);
parameters DC3/100000/;
parameters alpha/0.5/;
parameters beta/0.75/;
parameters gamma /0.5/;
parameters betahat /0.2/;
*================================================================
positive variables


v(t,i,j,k)    Base hub paper
u(t,i,k)      Base hub paper
y(t,i,k,l)      6-Base hub paper


PE(t,k)         9-penalty for excessive flows ( positive values of EX)
PX(t,k)         10-penalty for excessive flows ( positive values of EX) that is more than 200000 units

*p(t,k)          12-for robust formuation
*z(t,k)          13-for robust formuation
*q(t,k)          14- for robust formuation

BNQ(t,k)        15-built nominal capacity

TF(t,k)         16-tranferring flows
OFO(t,k)        17-outgoing flows from a openable hub
OFC(t,k)        18- outgoing flows from a closable hub
EF(t,k)         19-Enterring flows to a hub
AF(t,k)         20-aggregate flow
de(t,k)
p,q,z
;


binary variables
hc(t,ch)        3-hub nodes that can be close and are currently open
ho(t,oh)        2-hub nodes that can be open and are currently close

variables
TC              Total cost
EX(t,k)
;
*****************************************************************************************************
equations
OBJ
c1
c2
c3
c5
c6
c7
c8
c9
c10
c110,c111,c112
c11
c12
c13
c14
c15
c16
c17
c177
c18
c19
c20
c22
c23
c24
c25
c26
c27
v3
;
*------------------------------------------------------------------------------------------------------
OBJ..              TC=e= sum((t,i,k),u(t,i,k)*c(t,i,k)*(1/(r**(ord(t)-1))))
                        +sum((t,i,j,k),v(t,i,j,k)*c(t,k,j)*(1/(r**(ord(t)-1))))
                         +sum((t,i,k,l)$(ord(l) ne ord(k)),y(t,i,k,l)*alpha*c(t,k,l)*(1/(r**(ord(t)-1))))



                         +sum((t,k),PE(t,k)*DC1(t,k)*(1/(r**(ord(t)-1))))
                         +sum((t,k),PX(t,k)*DC2(t,k)*(1/(r**(ord(t)-1))))
                         +sum((t,k)$(ord(t) ge 3),PE(t-2,k)*CBC(t-2,k)*(1/(r**(ord(t)-1))))
                         +sum((t,k)$(ord(t) ge 5),PX(t-4,k)*CBC(t-4,k)*(1/(r**(ord(t)-1))))
                         +sum((t,k),de(t,k)*DC3*(1/(r**(ord(t)-1))))

                         +sum((t,oh),FHC(t,oh)*ho(t,oh)*(1/(r**(ord(t)-1))))
                         +sum((t,oh),HMC(t,oh)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh))*(1/(r**(ord(t)-1))))
                         +sum((t,ch),HMC(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch)))*(1/(r**(ord(t)-1))))
                         +sum((t,ch),HCC(t,ch)*hc(t,ch)*(1/(r**(ord(t)-1))))


;


c1(t,i)..                            sum(k,u(t,i,k))=e=O(t,i);
c2(t,i,j)$(ord(j) ne ord(i))..       sum(l,v(t,i,j,l))=e=w(t,i,j);
c3(t,i,k)..                          sum(l$(ord(l) ne ord(k)),y(t,i,k,l))-sum(l$(ord(l) ne ord(k)),y(t,i,l,k))=e=u(t,i,k)-sum(j,v(t,i,j,k));
c5(t,i,oh)..                         u(t,i,oh)=l=o(t,i)*sum(tt$(ord(tt) le ord(t)),ho(tt,oh)) ;
c6(t,i,j,oh)$(ord(j) ne ord(i))..    v(t,i,j,oh)=l=w(t,i,j)*sum(tt$(ord(tt) le ord(t)),ho(tt,oh));
c7(t,i,ch)..                         u(t,i,ch)=l=o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))) ;
c8(t,i,j,ch)$(ord(j) ne ord(i))..    v(t,i,j,ch)=l=w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch)));
c9(ch)..                             sum(t,hc(t,ch))=l=1;
c10(oh)..                            sum(t,ho(t,oh))=l=1;
c110(t)..                            sum(ch,1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch)))+sum(oh,sum(tt$(ord(tt) le ord(t)),ho(tt,oh)))=g=2;
c111(t,b)..                          ho(t,b)=e=0;
c112(t,'9')..                        hc(t,'25')=e=0;


c11(t,k)..                      EF(t,k)=e=sum(i$(ord(k) ne ord(i)),v(t,i,k,k));
c12(t,k)..                      TF(t,k)=e=sum((i,j)$(ord(i) ne ord(k) and ord(j) ne ord(k) and ord(i) ne ord(j)),v(t,i,j,k)+y(t,i,k,j));
c13(t,ch)..                     OFC(t,ch)=e=O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))) ;
c14(t,oh)..                     OFO(t,oh)=e=O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh));
c15(t,k)..                      AF(t,k)=e=EF(t,k)+OFC(t,k)$ch(k)+OFO(t,k)$oh(k)+2*TF(t,k);
c16(t,k)$(ord(t) <= 2)..        AF(t,k)=l=NQ(k)+de(t,k);
c17(t,k)$(ord(t) <= 2)..                    AF(t,k)-(BNQ(t,k)*beta)=e=EX(t,k);
c177(t,k)$(ord(t)>= 3)..                   -AF(t,k)+BNQ(t,K)*0.75-p(t,k)-gamma*z(t,k)+EX(t,k) =g=0  ;
c18(t,k)$(ord(t) >= 3)..                    p(t,k)+z(t,k)=g=betahat*q(t,k);
c19(t,k)$(ord(t) >= 3)..                    BNQ(t,k)=l=q(t,k);
c20(t,k)$(ord(t) >= 3)..                    BNQ(t,k)=g=-q(t,k);
c22(t,k)..                      PE(t,k)+PX(t,k)=g=EX(t,k);
c23(t,k)$(ord(t) <= 2)..        BNQ(t,k)=e=NQ(k);
c24(t,k)$(ord(t) le 4 and ord(t) ge 3)..         BNQ(t,k)=e=BNQ(t-1,k)+PE(t-2,k);
c25(t,k)$(ord(t) >= 5 and ord(t)<= card(t))..    BNQ(t,k)=e=BNQ(t-1,k)+PE(t-2,k)+PX(t-4,k);
c26(t,k)$(ord(t) >= 3 and ord(t)<= card(t))..    AF(t,k)=l=BNQ(t,k)+de(t,k);
c27(t,k)..                      PE(t,k)=l=BP(k);
model simple /Obj,c1,c2,c3,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17
                 c177,c18,c19,c20,c22,c23,c24,c25,c26,c27,c110,c111,c112/;
*simple.solprint=2;
* speed up by keeping GAMS in memory:
*simple.solvelink=2;
*solve simple using mip minimizing TC;
*display tc.l,hc.l,ho.l;

HO.fx(t,b)=0;
*HC.fx(t,ch)=0;HC.fx('1','17')=1;
*HC.fx('6','3')=1;HC.fx('6','12')=1;HC.fx('16','4')=1;
*HC.fx('16','10')=1;HC.fx('16','23')=1;
*HO.fx('1','6')=1;HO.fx('1','13')=1;
*HO.fx('1','18')=1; HO.fx('1','19')=1;
*HO.fx('1','22')=1;
*HO.fx('1','24')=1;


*<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Benders Decomposition Initialization >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

display "--------------------- BENDERS ALGORITHM ----------------------------";

scalar UB 'upperbound' /INF/;
scalar LB 'lowerbound' /0/;

ho.l(t,oh)=0;
hc.l(t,ch)=0;
*hc.l('1','8')=1 ;
*ho.l('2','5')=1 ;
* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Benders Subproblem >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


variable SUBz 'objective variable'
         s1(t,i)
         s2(t,i,j)
         s3(t,i,k)
         s11(t,k)
         s12(t,k)
         s13(t,k)
         s14(t,k)
         s15(t,k)
         s17(t,K)
         s23(t,k)
         s24(t,k)
         s25(t,k)
positive variables
         s5(t,i,k)
         s6(t,i,j,k)
         s7(t,i,k)
         s8(t,i,j,k)
         s16(t,k)
         s22(t,k)
         s26(t,k)
         s27(t,k)
         s177(t,k)
         s18(t,k)
         s19(t,k)
         s20(t,k)
;

equations
         subobj          'objective'
         Eu
         Ev
         Ey
         EEF
         ETF
         EOFC
         EOFO
         EAF
         EEX
         EBNQ1
         EBNQ2
         EBNQ3
         EBNQ4
         EBNQ5
         EBNQ6
         EPE1
         EPE2
         EPE3
         EPX1
         EPX2
         EDE
         EP
         Eq
         Ez
;

* to detect unbounded subproblem
scalar unbounded /1.0e30/;
*SUBz.up = unbounded;

SUBobj..              SUBz=e=    sum((t,i),O(t,i)*s1(t,i))
                                +sum((t,i,j),w(t,i,j)*s2(t,i,j))
                                -sum((t,i,oh),s5(t,i,oh)*o(t,i)*sum(tt$(ord(tt) le ord(t)),ho.l(tt,oh)))
                                -sum((t,i,ch),s7(t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))

                                -sum((t,i,j,oh),s6(t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) le ord(t)),ho.l(tt,oh)))
                                -sum((t,i,j,ch),s8(t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))

                                +sum((t,ch),s13(t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))
                                +sum((t,oh),s14(t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),ho.l(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),s16(t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),s23(t,k)*NQ(k))
                                -sum((t,k),s27(t,k)*BP(k))



                                +sum((t,oh),FHC(t,oh)*ho.l(t,oh)*(1/(r**(ord(t)-1))))
                                +sum((t,oh),HMC(t,oh)*sum(tt$(ord(tt) lt ord(t)+1),ho.l(tt,oh))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HMC(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch)))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HCC(t,ch)*hc.l(t,ch)*(1/(r**(ord(t)-1))))



;

Eu(t,i,k)..                                        s1(t,i)-s3(t,i,k)-s5(t,i,k)$oh(k)-s7(t,i,k)$(ch(k))=l=c(t,i,k)*(1/(r**(ord(t)-1)));
Ev(t,i,j,k)$(ord(j) ne ord(i))..                   s2(t,i,j)+s3(t,i,k)-s11(t,k)$(ord(j) eq ord(k) and ord(k) ne ord(i))-s12(t,k)$(ord(i) ne ord(k) and ord(j) ne ord(k) and ord(i) ne ord(j))-s6(t,i,j,k)$oh(k)-s8(t,i,j,k)$(ch(k))=l=c(t,k,j)*(1/(r**(ord(t)-1))) ;
Ey(t,i,k,l)$(ord(l) ne ord(k))..                   s3(t,i,k)-s3(t,i,l)-s12(t,k)$(ord(i) ne ord(k) and ord(i) ne ord(l))=l=alpha*c(t,k,l)*(1/(r**(ord(t)-1)));
EEF(t,k)..                                         s11(t,k)-s15(t,k)=l=0;
ETF(t,k)..                                         s12(t,k)-2*s15(t,k)=l=0 ;
EOFC(t,k)$ch(k)..                                  s13(t,k)-s15(t,k)=l=0;
EOFO(t,k)$oh(k)..                                  s14(t,k)-s15(t,k)=l=0;
EAF(t,k)..                                         s15(t,k)-s16(t,k)$(ord(t) <= 2)+s17(t,k)$(ord(t) le 2)-s177(t,k)$(ord(t) ge 3)-s26(t,k)$(ord(t) >= 3)=l=0;
EEX(t,k)..                                        -s17(t,k)$(ord(t) le 2)-s22(t,k)+s177(t,k)$(ord(t) ge 3)=e=0;

EBNQ1('1',k)..                                     -s17('1',k)*beta+s23('1',k)=l=0 ;
EBNQ2('2',k)..                                     -s17('2',k)*beta+s23('2',k)-s24('3',k)=l=0 ;
EBNQ3('3',k)..                                      s177('3',k)*beta+s26('3',k)+s24('3',k)-s24('4',k)-s19('3',k)+s20('3',k)=l=0;
EBNQ4('4',k)..                                      s177('4',k)*beta+s26('4',k)+s24('4',k)-s25('5',k)-s19('4',k)+s20('4',k)=l=0;
EBNQ5(t,k)$(ord(t) gt 4 and ord(t) <= card(t)-1)..  s177(t,k)*beta+s26(t,k)+s25(t,k)-s25(t+1,k)      -s19(t,k)  +s20(t,k)  =l=0;
EBNQ6(t,k)$(ord(t) eq card(t))..                    s177(t,k)*beta+s26(t,k)+s25(t,k)                 -s19(t,k)  +s20(t,k)  =l=0;

EPE1(t,k)$(ord(t) ge 3 and ord(t) le card(t)-2).. -s27(t,k)+s22(t,k)-s25(t+2,k)=l=DC1(t,k)*(1/(r**(ord(t)-1)))+CBC(t,k)*(1/(r**(ord(t)+2-1)));
EPE2(t,k)$(ord(t) le 2)..                         -s27(t,k)+s22(t,k)-s24(t+2,k)=l=DC1(t,k)*(1/(r**(ord(t)-1)))+CBC(t,k)*(1/(r**(ord(t)+2-1)));
EPE3(t,k)$(ord(t) >= card(t)-1)..                 -s27(t,k)+s22(t,k)=l=DC1(t,k)*(1/(r**(ord(t)-1)));


EPX1(t,k)$(ord(t) <= card(t)-4)..                  s22(t,k)-s25(t+4,k)=l=DC2(t,k)*(1/(r**(ord(t)-1)))+CBC(t,k)*(1/(r**(ord(t)+4-1)));
EPX2(t,k)$(ord(t) >= card(t)-3)..                  s22(t,k)=l=DC2(t,k)*(1/(r**(ord(t)-1)));
Ede(t,k)..                                         s16(t,k)$(ord(t) <= 2)+s26(t,k)$(ord(t) >= 3)=l=DC3*(1/(r**(ord(t)-1)));
Eq(t,k)$(ord(t) >= 3)..                            s19(t,k)+s20(t,k)-(betahat*s18(t,k))=l=0;
Ep(t,k)$(ord(t) >= 3)..                            s18(t,k)-s177(t,k)=l=0;
Ez(t,k)$(ord(t) >= 3)..                            s18(t,k)-gamma*s177(t,k)=l=0;

model subproblem /SUBobj,eu,ev,ey,eEF,eTF,eOFC,eOFO,eAF,eEX,eBNQ1,eBNQ2,eBNQ3,eBNQ4,eBNQ5,eBNQ6,ePE1,ePE2,ePE3,ePX1,ePX2,EDE,Eq,Ep,Ez/;
* reduce output to listing file:
subproblem.solprint=2;
* speed up by keeping GAMS in memory:
subproblem.solvelink=2;

*---------------------------------------------------------------------
* Benders Modified Subproblem to find unbounded ray
*---------------------------------------------------------------------


equations
   modifiedSUBobj
   extremerayEu
   extremerayEv
   extremerayEy
   extremerayEEF
   extremerayETF
   extremerayEOFC
   extremerayEOFO
   extremerayEAF
   extremerayEEX
   extremerayEBNQ1
   extremerayEBNQ2
   extremerayEBNQ3
   extremerayEBNQ4
   extremerayEBNQ5
   extremerayEBNQ6
   extremerayEPE1
   extremerayEPE2
   extremerayEPE3
   extremerayEPX1
   extremerayEPX2
   extremerayEDE
   extremerayEq
   extremerayEp
   extremerayEz
;
modifiedSUBobj..                 sum((t,i),O(t,i)*s1(t,i))
                                +sum((t,i,j),w(t,i,j)*s2(t,i,j))
                                -sum((t,i,oh),s5(t,i,oh)*o(t,i)*sum(tt$(ord(tt) le ord(t)),ho.l(tt,oh)))
                                -sum((t,i,ch),s7(t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))
                                -sum((t,i,j,oh),s6(t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) le ord(t)),ho.l(tt,oh)))
                                -sum((t,i,j,ch),s8(t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))


                                +sum((t,ch),s13(t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc.l(tt,ch))))
                                +sum((t,oh),s14(t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),ho.l(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),s16(t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),s23(t,k)*NQ(k))
                                -sum((t,k),s27(t,k)*BP(k))
                                =e=1



;

extremerayEu(t,i,k)..                                        s1(t,i)-s3(t,i,k)-s5(t,i,k)$oh(k)-s7(t,i,k)$(ch(k))=l=0;
extremerayEv(t,i,j,k)$(ord(j) ne ord(i))..                   s2(t,i,j)+s3(t,i,k)-s11(t,k)$(ord(j) eq ord(k) and ord(k) ne ord(i))-s12(t,k)$(ord(i) ne ord(k) and ord(j) ne ord(k) and ord(i) ne ord(j))-s6(t,i,j,k)$oh(k)-s8(t,i,j,k)$(ch(k))=l=0;
extremerayEy(t,i,k,l)$(ord(l) ne ord(k))..                   s3(t,i,k)-s3(t,i,l)-s12(t,k)$(ord(i) ne ord(k) and ord(i) ne ord(l))=l=alpha*c(t,k,l)*(1/(r**(ord(t)-1)));
extremerayEEF(t,k)..                                         s11(t,k)-s15(t,k)=l=0;
extremerayETF(t,k)..                                         s12(t,k)-2*s15(t,k)=l=0 ;
extremerayEOFC(t,k)$ch(k)..                                  s13(t,k)-s15(t,k)=l=0;
extremerayEOFO(t,k)$oh(k)..                                  s14(t,k)-s15(t,k)=l=0;
extremerayEAF(t,k)..                                         s15(t,k)-s16(t,k)$(ord(t) <= 2)+s17(t,k)-s26(t,k)$(ord(t) >= 3)=l=0;
extremerayEEX(t,k)..                                        -s17(t,k)-s22(t,k)=e=0;

extremerayEBNQ1('1',k)..                                     -s17('1',k)*beta+s23('1',k)=l=0 ;
extremerayEBNQ2('2',k)..                                     -s17('2',k)*beta+s23('2',k)-s24('3',k)=l=0 ;
extremerayEBNQ3('3',k)..                                     -s17('3',k)*beta+s26('3',k)+s24('3',k)-s24('4',k)=l=0;
extremerayEBNQ4('4',k)..                                     -s17('4',k)*beta+s26('4',k)+s24('4',k)-s25('5',k)=l=0;
extremerayEBNQ5(t,k)$(ord(t) gt 4 and ord(t) <= card(t)-1).. -s17(t,k)*beta+s26(t,k)+s25(t,k)-s25(t+1,k)=l=0;
extremerayEBNQ6(t,k)$(ord(t) eq card(t))..                   -s17(t,k)*beta+s26(t,k)+s25(t,k)=l=0;

extremerayEPE1(t,k)$(ord(t) ge 3 and ord(t) le card(t)-2).. -s27(t,k)+s22(t,k)-s25(t+2,k)=l=0;
extremerayEPE2(t,k)$(ord(t) le 2)..                         -s27(t,k)+s22(t,k)-s24(t+2,k)=l=0;
extremerayEPE3(t,k)$(ord(t) >= card(t)-1)..                 -s27(t,k)+s22(t,k)=l=0;


extremerayEPX1(t,k)$(ord(t) <= card(t)-4)..                  s22(t,k)-s25(t+4,k)=l=0;
extremerayEPX2(t,k)$(ord(t) >= card(t)-3)..                  s22(t,k)=l=0;
extremerayEde(t,k)..                                         s16(t,k)$(ord(t) le 2)+s26(t,k)$(ord(t) ge 3)=l=0;
extremerayEq(t,k)$(ord(t) >= 3)..                            s19(t,k)+s20(t,k)-(betahat*s18(t,k))=l=0;
extremerayEp(t,k)$(ord(t) >= 3)..                            s18(t,k)-s177(t,k)=l=0;
extremerayEz(t,k)$(ord(t) >= 3)..                            s18(t,k)-gamma*s177(t,k)=l=0;

model modifiedsubproblem /subobj,modifiedSUBobj,extremerayEu,extremerayEv,extremerayEy,extremerayEEF,extremerayETF,extremerayEOFC,extremerayEOFO,extremerayEAF,extremerayEEX,extremerayEBNQ1,extremerayEBNQ2,extremerayEBNQ3,extremerayEBNQ4,extremerayEBNQ5,extremerayEBNQ6,extremerayEPE1,extremerayEPE2,extremerayEPE3,extremerayEPX1,extremerayEPX2,extremerayEDE,extremerayEq,extremerayEp,extremerayEz/;
* reduce output to listing file:
modifiedsubproblem.solprint=2;
* speed up by keeping GAMS in memory:
modifiedsubproblem.solvelink=2;

*---------------------------------------------------------------------
* Benders Relaxed Master Problem
*---------------------------------------------------------------------

set iter /1*1000/;

set cutset(iter) 'dynamic set';
cutset(iter)=no;
set unbcutset(iter) 'dynamic set';
unbcutset(iter)=no;


variable MasZ 'relaxed master objective variable';
equations
   cut(iter)           'Benders cut for optimal subproblem'
   unboundedcut(iter)  'Benders cut for unbounded subproblem'
;

Parameters
         Ps1(iter,t,i)
         Ps2(iter,t,i,j)
         Ps5(iter,t,i,k)
         Ps7(iter,t,i,k)
         Ps6(iter,t,i,j,k)
         Ps8(iter,t,i,j,k)
         Ps13(iter,t,k)
         Ps14(iter,t,k)
         Ps16(iter,t,k)
         Ps23(iter,t,k)
         Ps27(iter,t,k)

;

cut(cutset).. MasZ =g=           sum((t,oh),FHC(t,oh)*ho(t,oh)*(1/(r**(ord(t)-1))))
                                +sum((t,oh),HMC(t,oh)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HMC(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch)))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HCC(t,ch)*hc(t,ch)*(1/(r**(ord(t)-1))))

                                +sum((t,i),O(t,i)*Ps1(cutset,t,i))
                                +sum((t,i,j),w(t,i,j)*Ps2(cutset,t,i,j))
                                -sum((t,i,oh),Ps5(cutset,t,i,oh)*o(t,i)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                -sum((t,i,ch),Ps7(cutset,t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))
                                -sum((t,i,j,oh),Ps6(cutset,t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                -sum((t,i,j,ch),Ps8(cutset,t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))
                                +sum((t,ch),Ps13(cutset,t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))
                                +sum((t,oh),Ps14(cutset,t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),Ps16(cutset,t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),Ps23(cutset,t,k)*NQ(k))
                                -sum((t,k),Ps27(cutset,t,k)*BP(k)) ;

unboundedcut(unbcutset)..        sum((t,i),O(t,i)*Ps1(unbcutset,t,i))
                                +sum((t,i,j),w(t,i,j)*Ps2(unbcutset,t,i,j))
                                 -sum((t,i,oh),Ps5(unbcutset,t,i,oh)*o(t,i)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                 -sum((t,i,ch),Ps7(unbcutset,t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))

                                -sum((t,i,j,oh),Ps6(unbcutset,t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                -sum((t,i,j,ch),Ps8(unbcutset,t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))
                                +sum((t,ch),Ps13(unbcutset,t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hc(tt,ch))))

                                +sum((t,oh),Ps14(unbcutset,t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),ho(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),Ps16(unbcutset,t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),Ps23(unbcutset,t,k)*NQ(k))
                                -sum((t,k),Ps27(unbcutset,t,k)*BP(k))
                                                                 =l= 0;

model master /cut,unboundedcut,c9,c10,c110,c111,c112/;
* reduce output to listing file:
master.solprint=2;
* speed up by keeping GAMS in memory:
master.solvelink=2;
* solve to optimality
master.optcr=0;

*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
variable MasZr 'relaxed master objective variable';
positive variables hcr(t,ch),hor(t,oh);

equations
   cutr(iter)           'Benders cut for optimal subproblem'
   unboundedcutr(iter)  'Benders cut for unbounded subproblem'
   cr9
   cr10
   cr110
   cr111
   cr112

;

cutr(cutset)..           MasZr =g= sum((t,oh),FHC(t,oh)*hor(t,oh)*(1/(r**(ord(t)-1))))
                                +sum((t,oh),HMC(t,oh)*sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HMC(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch)))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HCC(t,ch)*hcr(t,ch)*(1/(r**(ord(t)-1))))

                                +sum((t,i),O(t,i)*Ps1(cutset,t,i))
                                +sum((t,i,j),w(t,i,j)*Ps2(cutset,t,i,j))
                                -sum((t,i,oh),Ps5(cutset,t,i,oh)*o(t,i)*sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                -sum((t,i,ch),Ps7(cutset,t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))
                                -sum((t,i,j,oh),Ps6(cutset,t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                -sum((t,i,j,ch),Ps8(cutset,t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))
                                +sum((t,ch),Ps13(cutset,t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))
                                +sum((t,oh),Ps14(cutset,t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),Ps16(cutset,t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),Ps23(cutset,t,k)*NQ(k))
                                -sum((t,k),Ps27(cutset,t,k)*BP(k)) ;

unboundedcutr(unbcutset)..        sum((t,i),O(t,i)*Ps1(unbcutset,t,i))
                                 +sum((t,i,j),w(t,i,j)*Ps2(unbcutset,t,i,j))
                                 -sum((t,i,oh),Ps5(unbcutset,t,i,oh)*o(t,i)*sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                 -sum((t,i,ch),Ps7(unbcutset,t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))

                                -sum((t,i,j,oh),Ps6(unbcutset,t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                -sum((t,i,j,ch),Ps8(unbcutset,t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))
                                +sum((t,ch),Ps13(unbcutset,t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch))))

                                +sum((t,oh),Ps14(unbcutset,t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),hor(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),Ps16(unbcutset,t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),Ps23(unbcutset,t,k)*NQ(k))
                                -sum((t,k),Ps27(unbcutset,t,k)*BP(k))
                                                                 =l= 0;
cr9(ch)..                             sum(t,hcr(t,ch))=l=1;
cr10(oh)..                            sum(t,hor(t,oh))=l=1;

cr110(t)..                            sum(ch,1-sum(tt$(ord(tt) lt ord(t)),hcr(tt,ch)))+sum(oh,sum(tt$(ord(tt) le ord(t)),hor(tt,oh)))=g=2;
cr111(t,b)..                          hor(t,b)=e=0;
cr112(t,'9')..                        hcr(t,'25')=e=0;
model relaxed /cutr,unboundedcutr,cr9,cr10,cr110,cr111,cr112/;
variable SUBzr;
equation  SUBobjr ;
SUBobjr..                 SUBzr=e= sum((t,i),O(t,i)*s1(t,i))
                                +sum((t,i,j),w(t,i,j)*s2(t,i,j))
                                -sum((t,i,oh),s5(t,i,oh)*o(t,i)*sum(tt$(ord(tt) le ord(t)),hor.l(tt,oh)))
                                -sum((t,i,ch),s7(t,i,ch)*o(t,i)*(1-sum(tt$(ord(tt) lt ord(t)),hcr.l(tt,ch))))

                                -sum((t,i,j,oh),s6(t,i,j,oh)*w(t,i,j)*sum(tt$(ord(tt) le ord(t)),hor.l(tt,oh)))
                                -sum((t,i,j,ch),s8(t,i,j,ch)*w(t,i,j)*(1-sum(tt$(ord(tt) lt ord(t)),hcr.l(tt,ch))))

                                +sum((t,ch),s13(t,ch)*O(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hcr.l(tt,ch))))
                                +sum((t,oh),s14(t,oh)*O(t,oh)* sum(tt$(ord(tt) lt ord(t)+1),hor.l(tt,oh)))
                                -sum((t,k)$(ord(t) <= 2),s16(t,k)*NQ(k))
                                +sum((t,k)$(ord(t) <= 2),s23(t,k)*NQ(k))
                                -sum((t,k),s27(t,k)*BP(k))



                                +sum((t,oh),FHC(t,oh)*hor.l(t,oh)*(1/(r**(ord(t)-1))))
                                +sum((t,oh),HMC(t,oh)*sum(tt$(ord(tt) lt ord(t)+1),hor.l(tt,oh))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HMC(t,ch)*(1-sum(tt$(ord(tt) lt ord(t)),hcr.l(tt,ch)))*(1/(r**(ord(t)-1))))
                                +sum((t,ch),HCC(t,ch)*hcr.l(t,ch)*(1/(r**(ord(t)-1)))) ;


hcr.up(t,ch)=1;
hor.up(t,oh)=1;
HOr.fx(t,b)=0;
*HCr.fx(t,ch)=0;HCr.fx('1','17')=1;
*HCr.fx('6','3')=1;HCr.fx('6','12')=1;HCr.fx('16','4')=1;
*HCr.fx('16','10')=1;HCr.fx('16','23')=1;
*HOr.fx('1','6')=1;HOr.fx('1','13')=1;
*HOr.fx('1','18')=1; HOr.fx('1','19')=1;
*HOr.fx('1','22')=1;
*HOr.fx('1','24')=1;
hor.l(t,oh)=0;
hcr.l(t,ch)=0 ;
model relaxedsub /SUBobjr,eu,ev,ey,eEF,eTF,eOFC,eOFO,eAF,eEX,eBNQ1,eBNQ2,eBNQ3,eBNQ4,eBNQ5,eBNQ6,ePE1,ePE2,ePE3,ePX1,ePX2,EDE,Eq,Ep,Ez/;

*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*---------------------------------------------------------------------
* Benders Algorithm
*---------------------------------------------------------------------

scalar converged /0/;
scalar a/0/;
scalar a1/0/;
scalar iteration;
scalar bound;
parameter BESThc(t,ch)
          BESTho(t,oh);
parameter log1(iter,*) 'logging info'
          log2(iter,*) 'logging info' ;

loop(iter$(not converged),


   if(UB-LB>2500000000,
   options limrow=0,limcol=0,solprint=off,sysout=off;
   solve relaxedsub maximizing SUBzr using lp;
   abort$(relaxedsub.modelstat>=2) "relaxedsub not solved to optimality";
   bound =  SUBzr.l;
          if (bound < UB,
          UB = bound;
          );
   cutset(iter) = yes;
*   solve  optimalpareto maximizing zpareto using lp;
   a1=a1+1;
display LB,UB;
log1(iter,'LB') = LB;
log2(iter,'UB') = UB;
display log1,log2;
   else
    if(a=0,
    hc.l(t,ch)$(a=0)=hcr.l(t,ch);
    ho.l(t,oh)$(a=0)=hor.l(t,oh);
       );
   options limrow=0,limcol=0,solprint=off,sysout=off;
   solve subproblem maximizing SUBz using lp;
   abort$(subproblem.modelstat>=2) "Subproblem not solved to optimality";
   bound =  Subz.l;
          if (bound < UB,
          UB = bound;
          );
  cutset(iter) = yes;
  a=a+1;
*  cutset(iter)$(ord(iter) le a1) = NO;
*  cutset(iter)$(ord(iter) le a1 and a=1) = no;
    );






         Ps1(iter,t,i)= s1.l(t,i)          ;
         Ps2(iter,t,i,j)= s2.l(t,i,j)      ;
         Ps5(iter,t,i,k)= s5.l(t,i,k)      ;
         Ps7(iter,t,i,k) =  s7.l(t,i,k)    ;
         Ps6(iter,t,i,j,k)= s6.l(t,i,j,k)  ;
         Ps8(iter,t,i,j,k)= s8.l(t,i,j,k)  ;
         Ps13(iter,t,k)   =  s13.l(t,k)    ;
         Ps14(iter,t,k)   = s14.l(t,k)     ;
         Ps16(iter,t,k)   =  s16.l(t,k)    ;
         Ps23(iter,t,k)   = s23.l(t,k)     ;
         Ps27(iter,t,k)   = s27.l(t,k)     ;



*
* solve Relaxed Master Problem
*

   option optcr=0;

   if(a=0,

      options limrow=0,limcol=0,solprint=off,sysout=off;
      solve relaxed minimizing MasZr using lp;
      display hcr.l,hor.l;
       if(MasZr.l>LB,
         LB = MasZr.l;);
      else
      options limrow=0,limcol=0,solprint=off,sysout=off;
      solve master minimizing MasZ using MIP;
      if(MasZ.l>LB,
         LB = MasZ.l;);
      BESThc(t,ch) = hc.l(t,ch);
      BESTho(t,oh) = ho.l(t,oh);
      );



   log1(iter,'LB') = LB;
   log2(iter,'UB') = UB;

   iteration = ord(iter);
   display iteration,LB,UB,a,BESThc,BESTho;

   converged$( (UB-LB) < 2000000000 ) = 1;
   display$converged "Converged";
execute_unload 'output1.gdx' iteration,log1,log2,a;
);


abort$(not converged) "No convergence";

*
* recover solution
*
 ho.fx(t,oh) = BESTho(t,oh) ;
 hc.fx(t,ch) = BESThc(t,ch) ;
*simple.solvelink=2;
*simple.solprint=2;
solve simple minimizing TC using MIP;
display
BESThc
BESTho
abort$(simple.modelstat<>1) "final lp not solved to optimality";

display tc.l
BESThc
BESTho
v.l
u.l
y.l
EF.l
TF.l
OFC.l
OFO.l
AF.l
BNQ.l
HC.l
HO.l
PE.l
PX.l
de.l;

